[
["index.html", "R_Dplyr_minicourse Chapter 1 課程規劃 前言 課前要求 課程大綱", " R_Dplyr_minicourse 陳柏銘PoMingChen 2018-10-16 Chapter 1 課程規劃 前言 Dplyr是R語言當中相當重要的資料處理與轉換(Data Transformation)套件，同時也是跨出探索式資料分析的第一步。 探索式資料分析是透過視覺化或敘述統計的方式，去觀察資料本身的特性或者變數與變數之間的關聯，以求對資料有更多的認識，看看是否有意外有趣的發現或者不符合常理的地方。當然也包含資料清理與建立新變數特徵(features)等部分，必要時需透過爬蟲或者引入第三方資料，才算完整。 資料處理做得好，整體的分析方向和後面的統計建模才會有意義且往對的道路前進，以避免不必要的時間、資源浪費。 課前要求 安裝：R and R Studio Desktop: https://www.rstudio.com 下載dplyr cheatsheet 註冊Github 用Github帳戶登入右下角gitter open chat聊天室 課程大綱 本課程將逐步介紹Dplyr裡常見的函數，主要會透過R語言內建的nycflights13以及mtcars做教學與課堂上練習。自主練習部分則是利用美國職籃NBA17~18球季的球員統計資料做簡單的資料探索。 課堂範例(mtcars)與自主練習(NBA1718)皆無提供程式碼答案，前者請於課堂上透過gitter open chat貼上寫好的程式碼，也藉此了解大家的學習狀況。後者可以有空時玩一玩，貼在gitter，歡迎大家一起討論成長。 join(合併報表)是Dplyr中相當重要的一環，但因初期使用時機不多，所以有興趣可以自行參考cheatsheet。取代地，補充了tidyr裡面常用的gather/spread，用來轉換資料行列排版的函數。 以下為講解內容順序： 認識資料基本資訊 ?、head、Str、rename 計算敘述統計量 summarise 挑選適當的欄位 select 篩選適當觀察值 filter 從既有變數產生新變數 mutate 排序觀察值 arrange 分群分析 group_by 其他 gather/spread "],
["section-2.html", "Chapter 2 環境設定與基本觀察", " Chapter 2 環境設定與基本觀察 cheatsheet截圖對照 第一部分 引入需要用到的套件 #library(tidyverse) library(dplyr) library(nycflights13) library(SportsAnalytics) library(tibble) fetch_NBAPlayerStatistics(&quot;17-18&quot;) -&gt; NBA1718 mtcars %&gt;% rownames_to_column(var = &quot;car_name&quot;) -&gt; mtcars # 若無法成功，請先下載套件。 # 我們只要觀察2017-2018球季的資料。 引入資料 flights NBA1718 基本觀察函數 在「探索式資料分析」我們一定會需要去認識資料型態（Data type)，以及變數本身定義（The Domain）。 基本上四大資料型態有numeric(數值)，interger(整數)，character(字串)，logic(布林變數)。 這邊一共要介紹：?、head() 、str()、rename ?的功能與RStudio介面中，直接查詢Help是一樣的。基本上包含套件、函數、資料集都可以查詢。 ?flights ?dplyr head函數會顯示資料集的前六筆資料。 head(flights) ## # A tibble: 6 x 19 ## year month day dep_time sched_dep_time dep_delay ## &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; ## 1 2013 1 1 517 515 2 ## 2 2013 1 1 533 529 4 ## 3 2013 1 1 542 540 2 ## 4 2013 1 1 544 545 -1 ## 5 2013 1 1 554 600 -6 ## 6 2013 1 1 554 558 -4 ## # ... with 13 more variables: arr_time &lt;int&gt;, ## # sched_arr_time &lt;int&gt;, arr_delay &lt;dbl&gt;, ## # carrier &lt;chr&gt;, flight &lt;int&gt;, tailnum &lt;chr&gt;, ## # origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, ## # distance &lt;dbl&gt;, hour &lt;dbl&gt;, minute &lt;dbl&gt;, ## # time_hour &lt;dttm&gt; str函數則是以條列式來概覽整個資料集。 str(flights) ## Classes &#39;tbl_df&#39;, &#39;tbl&#39; and &#39;data.frame&#39;: 336776 obs. of 19 variables: ## $ year : int 2013 2013 2013 2013 2013 2013 2013 2013 2013 2013 ... ## $ month : int 1 1 1 1 1 1 1 1 1 1 ... ## $ day : int 1 1 1 1 1 1 1 1 1 1 ... ## $ dep_time : int 517 533 542 544 554 554 555 557 557 558 ... ## $ sched_dep_time: int 515 529 540 545 600 558 600 600 600 600 ... ## $ dep_delay : num 2 4 2 -1 -6 -4 -5 -3 -3 -2 ... ## $ arr_time : int 830 850 923 1004 812 740 913 709 838 753 ... ## $ sched_arr_time: int 819 830 850 1022 837 728 854 723 846 745 ... ## $ arr_delay : num 11 20 33 -18 -25 12 19 -14 -8 8 ... ## $ carrier : chr &quot;UA&quot; &quot;UA&quot; &quot;AA&quot; &quot;B6&quot; ... ## $ flight : int 1545 1714 1141 725 461 1696 507 5708 79 301 ... ## $ tailnum : chr &quot;N14228&quot; &quot;N24211&quot; &quot;N619AA&quot; &quot;N804JB&quot; ... ## $ origin : chr &quot;EWR&quot; &quot;LGA&quot; &quot;JFK&quot; &quot;JFK&quot; ... ## $ dest : chr &quot;IAH&quot; &quot;IAH&quot; &quot;MIA&quot; &quot;BQN&quot; ... ## $ air_time : num 227 227 160 183 116 150 158 53 140 138 ... ## $ distance : num 1400 1416 1089 1576 762 ... ## $ hour : num 5 5 5 5 6 5 6 6 6 6 ... ## $ minute : num 15 29 40 45 0 58 0 0 0 0 ... ## $ time_hour : POSIXct, format: &quot;2013-01-01 05:00:00&quot; ... rename，可以將更改變數名稱，增加易讀性，不然有時候變數名稱很長。 #新變數名稱（放左邊）= 舊的變數名稱 flights %&gt;% rename(total_distance = distance) ## # A tibble: 336,776 x 19 ## year month day dep_time sched_dep_time dep_delay ## &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; ## 1 2013 1 1 517 515 2 ## 2 2013 1 1 533 529 4 ## 3 2013 1 1 542 540 2 ## 4 2013 1 1 544 545 -1 ## 5 2013 1 1 554 600 -6 ## 6 2013 1 1 554 558 -4 ## 7 2013 1 1 555 600 -5 ## 8 2013 1 1 557 600 -3 ## 9 2013 1 1 557 600 -3 ## 10 2013 1 1 558 600 -2 ## # ... with 336,766 more rows, and 13 more variables: ## # arr_time &lt;int&gt;, sched_arr_time &lt;int&gt;, ## # arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;, ## # tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, ## # air_time &lt;dbl&gt;, total_distance &lt;dbl&gt;, hour &lt;dbl&gt;, ## # minute &lt;dbl&gt;, time_hour &lt;dttm&gt; 範例 若完成，請直接貼到open chat 請用?查詢他是一個怎麼樣的資料集？ 請用str或者head函數，觀察他哪些資料型態的變數較多？ 請用rename更改變數hp，變成horsepower mtcars 自主練習 請問(NBA1718)這個資料集裡面哪一種Data Type最多？ 其中一個變數，GamesStarted，是指該球員先發場次，我覺得把它改成Games_Started較佳，請問該怎麼做？ "],
["summarise.html", "Chapter 3 敘述統計量Summarise()", " Chapter 3 敘述統計量Summarise() cheatsheet截圖對照 第一部分 第二部分 Summary functions take vectors as input and return one value，意思就是他會精煉出一個值，可能是某一個變數的平均數等。 介紹兩種用法，summarise/summarise_at summarise 記得要幫你的summarise後的結果，取一個變數名稱。這邊是avg_dep_delay。 flights %&gt;% summarise(avg_dep_delay = mean(dep_delay), dep_delay_sd = sd(dep_delay)) ## # A tibble: 1 x 2 ## avg_dep_delay dep_delay_sd ## &lt;dbl&gt; &lt;dbl&gt; ## 1 NA NA #為什麼na.rm沒有加上會變成NA? #na.rm本身是什麼意思？ flights %&gt;% summarise(dep_delay_mean = mean(dep_delay, na.rm = T), arr_delay_mean = mean(arr_delay, na.rm = T), dep_delay_sd = sd(dep_delay, na.rm = T), arr_delay_sd = sd(arr_delay, na.rm = T)) ## # A tibble: 1 x 4 ## dep_delay_mean arr_delay_mean dep_delay_sd ## &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 12.6 6.90 40.2 ## # ... with 1 more variable: arr_delay_sd &lt;dbl&gt; summarise_at意思就是指定幾個變數進行summarise，如果遇到很多個變數的話，會比較方便。 #vars，本身是variables的意思，就是要挑哪幾個變數 #funs，本身是functions的意思，就是要執行哪些summary function flights %&gt;% summarise_at(vars(dep_delay, arr_delay), funs(mean,sd), na.rm = T) ## # A tibble: 1 x 4 ## dep_delay_mean arr_delay_mean dep_delay_sd ## &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 12.6 6.90 40.2 ## # ... with 1 more variable: arr_delay_sd &lt;dbl&gt; 上面兩者的結果一樣嗎？ 範例 若完成，請直接貼到open chat 若你是一位賣車的菜鳥業務，為了要知道各車款的優劣勢，想先了解一下這些車，平均有多少汽缸數（cyl, cylinders)，平均有幾匹馬力(hp, Gross horsepower)，你會怎麼做？ mtcars 自主練習 請問NBA 2017-2018球季， 全體球員平均上場場次為幾場？標準差多少？(上場場次，變數為GamePlayed) "],
["select.html", "Chapter 4 挑選適當的欄位Select()", " Chapter 4 挑選適當的欄位Select() cheatsheet截圖對照 第一部分 Select 是針對欄位(variables)做子集合 基本取法 #若我想看每一個航班的基本資料，包含起飛與目的地 flights %&gt;% select(year,month,day,carrier,flight,tailnum,origin,dest) ## # A tibble: 336,776 x 8 ## year month day carrier flight tailnum origin ## &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt; ## 1 2013 1 1 UA 1545 N14228 EWR ## 2 2013 1 1 UA 1714 N24211 LGA ## 3 2013 1 1 AA 1141 N619AA JFK ## 4 2013 1 1 B6 725 N804JB JFK ## 5 2013 1 1 DL 461 N668DN LGA ## 6 2013 1 1 UA 1696 N39463 EWR ## 7 2013 1 1 B6 507 N516JB EWR ## 8 2013 1 1 EV 5708 N829AS LGA ## 9 2013 1 1 B6 79 N593JB JFK ## 10 2013 1 1 AA 301 N3ALAA LGA ## # ... with 336,766 more rows, and 1 more variable: ## # dest &lt;chr&gt; 取連續某幾行的欄位 #跟上面的寫法，有什麼異同？ flights %&gt;% select(year:day,carrier:dest) ## # A tibble: 336,776 x 8 ## year month day carrier flight tailnum origin ## &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt; ## 1 2013 1 1 UA 1545 N14228 EWR ## 2 2013 1 1 UA 1714 N24211 LGA ## 3 2013 1 1 AA 1141 N619AA JFK ## 4 2013 1 1 B6 725 N804JB JFK ## 5 2013 1 1 DL 461 N668DN LGA ## 6 2013 1 1 UA 1696 N39463 EWR ## 7 2013 1 1 B6 507 N516JB EWR ## 8 2013 1 1 EV 5708 N829AS LGA ## 9 2013 1 1 B6 79 N593JB JFK ## 10 2013 1 1 AA 301 N3ALAA LGA ## # ... with 336,766 more rows, and 1 more variable: ## # dest &lt;chr&gt; 取特定類型的欄位 #若我有想看有關起飛與抵達的資料，contains()，就能派上用場，當然也有其他內容，請參考cheatsheet flights %&gt;% select(contains(&quot;dep&quot;), contains(&quot;arr&quot;)) ## # A tibble: 336,776 x 7 ## dep_time sched_dep_time dep_delay arr_time ## &lt;int&gt; &lt;int&gt; &lt;dbl&gt; &lt;int&gt; ## 1 517 515 2 830 ## 2 533 529 4 850 ## 3 542 540 2 923 ## 4 544 545 -1 1004 ## 5 554 600 -6 812 ## 6 554 558 -4 740 ## 7 555 600 -5 913 ## 8 557 600 -3 709 ## 9 557 600 -3 838 ## 10 558 600 -2 753 ## # ... with 336,766 more rows, and 3 more variables: ## # sched_arr_time &lt;int&gt;, arr_delay &lt;dbl&gt;, ## # carrier &lt;chr&gt; 去掉某些變數(drop certain variables) #若我留意有些變數，對後續分析沒有幫助... flights %&gt;% select(-c(time_hour)) ## # A tibble: 336,776 x 18 ## year month day dep_time sched_dep_time dep_delay ## &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; ## 1 2013 1 1 517 515 2 ## 2 2013 1 1 533 529 4 ## 3 2013 1 1 542 540 2 ## 4 2013 1 1 544 545 -1 ## 5 2013 1 1 554 600 -6 ## 6 2013 1 1 554 558 -4 ## 7 2013 1 1 555 600 -5 ## 8 2013 1 1 557 600 -3 ## 9 2013 1 1 557 600 -3 ## 10 2013 1 1 558 600 -2 ## # ... with 336,766 more rows, and 12 more variables: ## # arr_time &lt;int&gt;, sched_arr_time &lt;int&gt;, ## # arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;, ## # tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, ## # air_time &lt;dbl&gt;, distance &lt;dbl&gt;, hour &lt;dbl&gt;, ## # minute &lt;dbl&gt; #一次可以去掉多個變數嗎？ flights %&gt;% select(-c(time_hour,tailnum,flight)) ## # A tibble: 336,776 x 16 ## year month day dep_time sched_dep_time dep_delay ## &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; ## 1 2013 1 1 517 515 2 ## 2 2013 1 1 533 529 4 ## 3 2013 1 1 542 540 2 ## 4 2013 1 1 544 545 -1 ## 5 2013 1 1 554 600 -6 ## 6 2013 1 1 554 558 -4 ## 7 2013 1 1 555 600 -5 ## 8 2013 1 1 557 600 -3 ## 9 2013 1 1 557 600 -3 ## 10 2013 1 1 558 600 -2 ## # ... with 336,766 more rows, and 10 more variables: ## # arr_time &lt;int&gt;, sched_arr_time &lt;int&gt;, ## # arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, origin &lt;chr&gt;, ## # dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;, ## # hour &lt;dbl&gt;, minute &lt;dbl&gt; everthing() #everything()，意思是all variables的意思。 #稍等與mutate()一起使用可以提升資料整理的效率性。 flights %&gt;% select(everything()) ## # A tibble: 336,776 x 19 ## year month day dep_time sched_dep_time dep_delay ## &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; ## 1 2013 1 1 517 515 2 ## 2 2013 1 1 533 529 4 ## 3 2013 1 1 542 540 2 ## 4 2013 1 1 544 545 -1 ## 5 2013 1 1 554 600 -6 ## 6 2013 1 1 554 558 -4 ## 7 2013 1 1 555 600 -5 ## 8 2013 1 1 557 600 -3 ## 9 2013 1 1 557 600 -3 ## 10 2013 1 1 558 600 -2 ## # ... with 336,766 more rows, and 13 more variables: ## # arr_time &lt;int&gt;, sched_arr_time &lt;int&gt;, ## # arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;, ## # tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, ## # air_time &lt;dbl&gt;, distance &lt;dbl&gt;, hour &lt;dbl&gt;, ## # minute &lt;dbl&gt;, time_hour &lt;dttm&gt; 範例 若完成，請直接貼到open chat 若有一位買家對於這32台車子很有興趣，特別是在省油表現（Miles/(US) gallon, mpg)，以及馬力表現(hp, Gross horsepower)有很大的興趣，你要怎麼整理資料給他？ mtcars 自主練習 若有一名球隊總管，很重視防守，他想要查一下聯盟中誰防守比較好。需要其名字(Name)、所屬隊伍(Team)、守備位置(Position)， 他搶了幾個籃板球(TotalRebounds)，有幾次抄球 (Steals)，請問應該怎麼準備資料？ "],
["filter.html", "Chapter 5 篩選適當觀察值filter()", " Chapter 5 篩選適當觀察值filter() cheatsheet截圖對照 第一部分 filter 是針對列(row)，或者說觀察值(obervations)，做子集合，目的是尋找滿足特定條件的資料點 基本用法 flights %&gt;% filter(month==1, day==2) ## # A tibble: 943 x 19 ## year month day dep_time sched_dep_time dep_delay ## &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; ## 1 2013 1 2 42 2359 43 ## 2 2013 1 2 126 2250 156 ## 3 2013 1 2 458 500 -2 ## 4 2013 1 2 512 515 -3 ## 5 2013 1 2 535 540 -5 ## 6 2013 1 2 536 529 7 ## 7 2013 1 2 539 545 -6 ## 8 2013 1 2 554 600 -6 ## 9 2013 1 2 554 600 -6 ## 10 2013 1 2 554 600 -6 ## # ... with 933 more rows, and 13 more variables: ## # arr_time &lt;int&gt;, sched_arr_time &lt;int&gt;, ## # arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;, ## # tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, ## # air_time &lt;dbl&gt;, distance &lt;dbl&gt;, hour &lt;dbl&gt;, ## # minute &lt;dbl&gt;, time_hour &lt;dttm&gt; 加入logical and boolean operators 眾多logical and boolean operators，請參考cheatsheet flights %&gt;% filter(dep_delay &lt;= 20 &amp; arr_delay &lt;= 20) ## # A tibble: 249,192 x 19 ## year month day dep_time sched_dep_time dep_delay ## &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; ## 1 2013 1 1 517 515 2 ## 2 2013 1 1 533 529 4 ## 3 2013 1 1 544 545 -1 ## 4 2013 1 1 554 600 -6 ## 5 2013 1 1 554 558 -4 ## 6 2013 1 1 555 600 -5 ## 7 2013 1 1 557 600 -3 ## 8 2013 1 1 557 600 -3 ## 9 2013 1 1 558 600 -2 ## 10 2013 1 1 558 600 -2 ## # ... with 249,182 more rows, and 13 more variables: ## # arr_time &lt;int&gt;, sched_arr_time &lt;int&gt;, ## # arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;, ## # tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, ## # air_time &lt;dbl&gt;, distance &lt;dbl&gt;, hour &lt;dbl&gt;, ## # minute &lt;dbl&gt;, time_hour &lt;dttm&gt; 做變數計算並作為篩選條件 flights %&gt;% filter(dep_delay + arr_delay &lt;= 30) ## # A tibble: 256,128 x 19 ## year month day dep_time sched_dep_time dep_delay ## &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; ## 1 2013 1 1 517 515 2 ## 2 2013 1 1 533 529 4 ## 3 2013 1 1 544 545 -1 ## 4 2013 1 1 554 600 -6 ## 5 2013 1 1 554 558 -4 ## 6 2013 1 1 555 600 -5 ## 7 2013 1 1 557 600 -3 ## 8 2013 1 1 557 600 -3 ## 9 2013 1 1 558 600 -2 ## 10 2013 1 1 558 600 -2 ## # ... with 256,118 more rows, and 13 more variables: ## # arr_time &lt;int&gt;, sched_arr_time &lt;int&gt;, ## # arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;, ## # tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, ## # air_time &lt;dbl&gt;, distance &lt;dbl&gt;, hour &lt;dbl&gt;, ## # minute &lt;dbl&gt;, time_hour &lt;dttm&gt; 看起來比較特別的%in%，是什麼？ #基本理解是：是否屬於。 #在字串變數(character)的挑選，以及其他字串操作上很常用 flights %&gt;% filter(carrier %in% c(&quot;UA&quot;,&quot;US&quot;), dep_delay + arr_delay &lt;= 30) ## # A tibble: 63,006 x 19 ## year month day dep_time sched_dep_time dep_delay ## &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; ## 1 2013 1 1 517 515 2 ## 2 2013 1 1 533 529 4 ## 3 2013 1 1 554 558 -4 ## 4 2013 1 1 558 600 -2 ## 5 2013 1 1 558 600 -2 ## 6 2013 1 1 559 600 -1 ## 7 2013 1 1 607 607 0 ## 8 2013 1 1 611 600 11 ## 9 2013 1 1 622 630 -8 ## 10 2013 1 1 623 627 -4 ## # ... with 62,996 more rows, and 13 more variables: ## # arr_time &lt;int&gt;, sched_arr_time &lt;int&gt;, ## # arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;, ## # tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, ## # air_time &lt;dbl&gt;, distance &lt;dbl&gt;, hour &lt;dbl&gt;, ## # minute &lt;dbl&gt;, time_hour &lt;dttm&gt; 範例 若完成，請直接貼到open chat 若有一位買家對於這32台車子很有興趣，特別是在省油表現（Miles/(US) gallon, mpg)，以及馬力表現(hp, Gross horsepower)有很大的興趣，你要整理哪些資料？ 後來他希望能夠買到馬力性能比較強的車，他要求你將馬力表現高於平均的車款額外整理給他，應該怎麼做呢？ mtcars 自主練習 延續上一題，若該位總管，除了重視防守之外，他也很重視球員耐戰程度，假設整個球季上場就過2500分鐘可以視為高耐戰族群，要怎麼做才能知道有哪些球員？ "],
["mutate.html", "Chapter 6 從既有變數產生新變數mutate()", " Chapter 6 從既有變數產生新變數mutate() cheatsheet截圖對照 第一部分 第二部分 mutate/transmute，以及mutate+select組合技 和summary functions不同的是 : vectorized function，得到的還是一個vector(column vector) mutate從既有變數中新增變數，有保留原始data.frame。 flights %&gt;% mutate(total_delay = dep_delay + arr_delay) ## # A tibble: 336,776 x 20 ## year month day dep_time sched_dep_time dep_delay ## &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; ## 1 2013 1 1 517 515 2 ## 2 2013 1 1 533 529 4 ## 3 2013 1 1 542 540 2 ## 4 2013 1 1 544 545 -1 ## 5 2013 1 1 554 600 -6 ## 6 2013 1 1 554 558 -4 ## 7 2013 1 1 555 600 -5 ## 8 2013 1 1 557 600 -3 ## 9 2013 1 1 557 600 -3 ## 10 2013 1 1 558 600 -2 ## # ... with 336,766 more rows, and 14 more variables: ## # arr_time &lt;int&gt;, sched_arr_time &lt;int&gt;, ## # arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;, ## # tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, ## # air_time &lt;dbl&gt;, distance &lt;dbl&gt;, hour &lt;dbl&gt;, ## # minute &lt;dbl&gt;, time_hour &lt;dttm&gt;, total_delay &lt;dbl&gt; transmute從既有變數中新增變數，無保留原始data.frame。 flights %&gt;% transmute(total_delay = dep_delay + arr_delay) ## # A tibble: 336,776 x 1 ## total_delay ## &lt;dbl&gt; ## 1 13 ## 2 24 ## 3 35 ## 4 -19 ## 5 -31 ## 6 8 ## 7 14 ## 8 -17 ## 9 -11 ## 10 6 ## # ... with 336,766 more rows 要怎麼讓新產生的變數，排列到適當的相對位置，不然老是在最右邊？(mutate+select組合技) #我想要讓total_delay，排在arr_delay的旁邊 flights %&gt;% mutate(total_delay = dep_delay + arr_delay) %&gt;% select(year:arr_delay, total_delay, everything()) ## # A tibble: 336,776 x 20 ## year month day dep_time sched_dep_time dep_delay ## &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; ## 1 2013 1 1 517 515 2 ## 2 2013 1 1 533 529 4 ## 3 2013 1 1 542 540 2 ## 4 2013 1 1 544 545 -1 ## 5 2013 1 1 554 600 -6 ## 6 2013 1 1 554 558 -4 ## 7 2013 1 1 555 600 -5 ## 8 2013 1 1 557 600 -3 ## 9 2013 1 1 557 600 -3 ## 10 2013 1 1 558 600 -2 ## # ... with 336,766 more rows, and 14 more variables: ## # arr_time &lt;int&gt;, sched_arr_time &lt;int&gt;, ## # arr_delay &lt;dbl&gt;, total_delay &lt;dbl&gt;, carrier &lt;chr&gt;, ## # flight &lt;int&gt;, tailnum &lt;chr&gt;, origin &lt;chr&gt;, ## # dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;, ## # hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt; 範例 若完成，請直接貼到open chat 若有一位買家對於這32台車子很有興趣，特別是在省油表現（Miles/(US) gallon, mpg)，以及馬力表現(hp, Gross horsepower)有很大的興趣，你要整理哪些資料？ 後來他希望能夠買到馬力性能比較強的車，他要求你將馬力表現高於平均的車款額外整理給他，應該怎麼做呢？ 假設這位買家最近試駕了很多台車款，閒聊時候偶然跟你分享他獨家的選車know-how，標準是省油表現（Miles/(US) gallon,mpg)數字的十倍，再加上馬力表現的總和，越高越好，請問哪一台車應該是他的心頭好？ mtcars 自主練習 休士頓火箭隊，隊伍中，本季每個人的場均得分(本季總得分(TotalPoints)/本季出賽場次(GamesPlayed))是多少？ "],
["arrange.html", "Chapter 7 排序觀察值arrange()", " Chapter 7 排序觀察值arrange() cheatsheet截圖對照 第一部分 遞增排序，以及遞減排序 1.預設是由低到高 flights %&gt;% arrange(dep_delay) ## # A tibble: 336,776 x 19 ## year month day dep_time sched_dep_time dep_delay ## &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; ## 1 2013 12 7 2040 2123 -43 ## 2 2013 2 3 2022 2055 -33 ## 3 2013 11 10 1408 1440 -32 ## 4 2013 1 11 1900 1930 -30 ## 5 2013 1 29 1703 1730 -27 ## 6 2013 8 9 729 755 -26 ## 7 2013 10 23 1907 1932 -25 ## 8 2013 3 30 2030 2055 -25 ## 9 2013 3 2 1431 1455 -24 ## 10 2013 5 5 934 958 -24 ## # ... with 336,766 more rows, and 13 more variables: ## # arr_time &lt;int&gt;, sched_arr_time &lt;int&gt;, ## # arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;, ## # tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, ## # air_time &lt;dbl&gt;, distance &lt;dbl&gt;, hour &lt;dbl&gt;, ## # minute &lt;dbl&gt;, time_hour &lt;dttm&gt; 加入desc()， descending order是遞減，由高到低 flights %&gt;% arrange(desc(dep_delay)) ## # A tibble: 336,776 x 19 ## year month day dep_time sched_dep_time dep_delay ## &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; ## 1 2013 1 9 641 900 1301 ## 2 2013 6 15 1432 1935 1137 ## 3 2013 1 10 1121 1635 1126 ## 4 2013 9 20 1139 1845 1014 ## 5 2013 7 22 845 1600 1005 ## 6 2013 4 10 1100 1900 960 ## 7 2013 3 17 2321 810 911 ## 8 2013 6 27 959 1900 899 ## 9 2013 7 22 2257 759 898 ## 10 2013 12 5 756 1700 896 ## # ... with 336,766 more rows, and 13 more variables: ## # arr_time &lt;int&gt;, sched_arr_time &lt;int&gt;, ## # arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;, ## # tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, ## # air_time &lt;dbl&gt;, distance &lt;dbl&gt;, hour &lt;dbl&gt;, ## # minute &lt;dbl&gt;, time_hour &lt;dttm&gt; 範例 若完成，請直接貼到open chat 若有一位買家對於這32台車子很有興趣，特別是在省油表現（Miles/(US) gallon, mpg)，以及馬力表現(hp, Gross horsepower)有很大的興趣，你要整理哪些資料？ 後來他希望能夠買到馬力性能比較強的車，他要求你將馬力表現高於平均的車款額外整理給他，應該怎麼做呢？ 假設這位買家最近試駕了很多台車款，閒聊時候偶然跟你分享他獨家的選車know-how，標準是省油表現（Miles/(US) gallon,mpg)數字的十倍，再加上馬力表現的總和，越高越好，請問哪一台車應該是他的心頭好？ 要成交前，該位買家因為莫名原因心情好，決定要買他挑選標準該數據的前三名，請問你應該給他哪三台車的最終報價？ mtcars 自主練習 休士頓火箭隊，隊伍中前三大得分點是誰？ "],
["group-by.html", "Chapter 8 分群分析group_by()", " Chapter 8 分群分析group_by() cheatsheet截圖對照 第一部分 分群分析與群內排序 group_by()函數會由原本資料集產生一個新的分群過的資料集，通常會與summarise函數一起運用。可以直接理解為group by certain variable。 用group_by函數看看「哪一家航空公司(carrier)」的「平均起飛延遲」最嚴重？ flights %&gt;% group_by(carrier) %&gt;% summarise_at(vars(dep_delay), funs(mean), na.rm = T) %&gt;% arrange(desc(dep_delay)) %&gt;% rename(dep_delay_mean = dep_delay) ## # A tibble: 16 x 2 ## carrier dep_delay_mean ## &lt;chr&gt; &lt;dbl&gt; ## 1 F9 20.2 ## 2 EV 20.0 ## 3 YV 19.0 ## 4 FL 18.7 ## 5 WN 17.7 ## 6 9E 16.7 ## 7 B6 13.0 ## 8 VX 12.9 ## 9 OO 12.6 ## 10 UA 12.1 ## 11 MQ 10.6 ## 12 DL 9.26 ## 13 AA 8.59 ## 14 AS 5.80 ## 15 HA 4.90 ## 16 US 3.78 可以設定多個分組依據 # 我想要知道個別`航空公司(carrier) `，哪些`航班路線(Flight number)`起飛通常比較容易遇到延遲？ flights %&gt;% group_by(carrier, flight) %&gt;% summarise_at(vars(dep_delay), funs(mean), na.rm = T) %&gt;% arrange(desc(dep_delay)) %&gt;% rename(dep_delay_mean = dep_delay) ## # A tibble: 5,725 x 3 ## # Groups: carrier [16] ## carrier flight dep_delay_mean ## &lt;chr&gt; &lt;int&gt; &lt;dbl&gt; ## 1 WN 521 346 ## 2 DL 390 334 ## 3 DL 809 298 ## 4 UA 1510 278 ## 5 EV 5478 242 ## 6 EV 5117 219 ## 7 9E 3760 217 ## 8 EV 5855 209 ## 9 WN 1019 203 ## 10 WN 217 195 ## # ... with 5,715 more rows 我想要知道1~12月份，「各月份」的「每一天」，航班「平均起飛延遲」嚴重程度？（group_by + arrange組合技） #意思就是，群內（或者說組內）排序怎麼做？ #請查詢 Help，重點是arrange函數裡面的 .by_group 參數 flights %&gt;% group_by(month, day) %&gt;% summarise_at(vars(dep_delay), funs(mean), na.rm = T) %&gt;% arrange(desc(dep_delay), .by_group = T) ## # A tibble: 365 x 3 ## # Groups: month [12] ## month day dep_delay ## &lt;int&gt; &lt;int&gt; &lt;dbl&gt; ## 1 1 31 28.7 ## 2 1 30 28.6 ## 3 1 16 24.6 ## 4 1 25 21.9 ## 5 1 13 19.9 ## 6 1 24 19.5 ## 7 1 28 15.1 ## 8 1 2 13.9 ## 9 1 22 12.5 ## 10 1 1 11.5 ## # ... with 355 more rows 範例 若完成，請直接貼到open chat 若有一位買家對於這32台車子很有興趣，特別是在省油表現（Miles/(US) gallon, mpg)，以及馬力表現(hp, Gross horsepower)有很大的興趣，你要整理哪些資料？ 後來他希望能夠買到馬力性能比較強的車，他要求你將馬力表現高於平均的車款額外整理給他，應該怎麼做呢？ 假設這位買家最近試駕了很多台車款，閒聊時候偶然跟你分享他獨家的選車know-how，標準是省油表現（Miles/(US) gallon,mpg)數字的十倍，再加上馬力表現的總和，越高越好，請問哪一台車應該是他的心頭好？ 要成交前，該位買家因為莫名原因心情好，決定要買他挑選標準該數據的前三名，請問你應該給他哪三台車的最終報價？ 服務完這位客戶後，發現自己累積了不少經驗，也留意到汽缸數多寡與馬力有一定關聯性，閒來之餘想要整理一下相同汽缸數下，不同車款的馬力比較表作為往後參考，請問該怎麼做？ mtcars 自主練習 (延續上一題）休士頓火箭隊，各個守備位置各有多少人？ 隊(Team)、守備位置(Position)是兩個分組條件 計算row（或者說樣本個數），可以用n(), number of values/rows，可參考dplyr cheatsheet "],
["section-9.html", "Chapter 9 其他", " Chapter 9 其他 cheatsheet截圖對照 第一部分 行列互相轉換gather()/spread() gather/spread來自哪一個套件？ ?dplyr #查詢特定套件用一個`?` ??gather #查詢特定函數用兩個`??` ??spread 引入需要的套件 library(tidyr) gather() gather()函數會將許多欄位變數(column, or variables)，轉化成列(row, or obervations)。 重要參數說明 : 1. key：為「原本的欄位變數」，其轉換為row obervation後，命名該新增欄位的名稱。 2. value：為「原本的欄位變數」的觀察值(obervations)，命名其新欄位的名字。 請問這兩段程式碼結果有什麼不同？ #總共有336,776 rows flights %&gt;% select(year:day, dep_delay, arr_delay, flight:tailnum) ## # A tibble: 336,776 x 7 ## year month day dep_delay arr_delay flight tailnum ## &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; &lt;chr&gt; ## 1 2013 1 1 2 11 1545 N14228 ## 2 2013 1 1 4 20 1714 N24211 ## 3 2013 1 1 2 33 1141 N619AA ## 4 2013 1 1 -1 -18 725 N804JB ## 5 2013 1 1 -6 -25 461 N668DN ## 6 2013 1 1 -4 12 1696 N39463 ## 7 2013 1 1 -5 19 507 N516JB ## 8 2013 1 1 -3 -14 5708 N829AS ## 9 2013 1 1 -3 -8 79 N593JB ## 10 2013 1 1 -2 8 301 N3ALAA ## # ... with 336,766 more rows #總共有673,552 rows flights %&gt;% select(year:day, dep_delay, arr_delay, flight:tailnum) %&gt;% gather(c(dep_delay,arr_delay), key = &quot;the_delay&quot;, value = &quot;minutes&quot;) ## # A tibble: 673,552 x 7 ## year month day flight tailnum the_delay minutes ## &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; ## 1 2013 1 1 1545 N14228 dep_delay 2 ## 2 2013 1 1 1714 N24211 dep_delay 4 ## 3 2013 1 1 1141 N619AA dep_delay 2 ## 4 2013 1 1 725 N804JB dep_delay -1 ## 5 2013 1 1 461 N668DN dep_delay -6 ## 6 2013 1 1 1696 N39463 dep_delay -4 ## 7 2013 1 1 507 N516JB dep_delay -5 ## 8 2013 1 1 5708 N829AS dep_delay -3 ## 9 2013 1 1 79 N593JB dep_delay -3 ## 10 2013 1 1 301 N3ALAA dep_delay -2 ## # ... with 673,542 more rows flights %&gt;% select(year:day, dep_delay, arr_delay, flight:tailnum) %&gt;% gather(c(dep_delay,arr_delay), key = &quot;the_delay&quot;, value = &quot;minutes&quot;) %&gt;% filter(flight == 1545, tailnum == &quot;N14228&quot;) ## # A tibble: 2 x 7 ## year month day flight tailnum the_delay minutes ## &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; ## 1 2013 1 1 1545 N14228 dep_delay 2 ## 2 2013 1 1 1545 N14228 arr_delay 11 spread() #先另存成一個新物件flights1方便後續操作。 flights %&gt;% select(year:day, dep_delay, arr_delay, flight:tailnum) %&gt;% gather(c(dep_delay,arr_delay), key = &quot;the_delay&quot;, value = &quot;minutes&quot;) -&gt; flights1 基本上spread()與gather()，目的相反。將列(row, or obervations)，轉化成欄位變數(column, or variables) 重要參數說明 : 1. key：挑選要將哪一個欄位變數「其obversation內容」轉換為「新欄位變數」，新欄位名稱即為原本的obervation內容。 2. value：挑選要將哪一個欄位變數「其obversation內容」設定為新產生的欄位變數的內容。 下列兩段程式碼有什麼不同？哪一個可以運作成功？ flights1 %&gt;% spread(key = &quot;the_delay&quot;, value = &quot;minutes&quot;) 使用spread的過程中，如果要轉成欄位的該觀測值(obervations)，沒有某一個欄位變數可以一對一對應的話(be unique)，轉換就會失敗。所以可以新增一行unique index column。 相關資料參考1 flights1 %&gt;% group_by(the_delay) %&gt;% mutate(grouped_id = row_number()) flights1 %&gt;% group_by(the_delay) %&gt;% mutate(grouped_id = row_number()) %&gt;% spread(key = &quot;the_delay&quot;,value = &quot;minutes&quot;) %&gt;% select(-grouped_id) ## # A tibble: 336,776 x 7 ## year month day flight tailnum arr_delay dep_delay ## &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 2013 1 1 1545 N14228 11 2 ## 2 2013 1 1 1714 N24211 20 4 ## 3 2013 1 1 1141 N619AA 33 2 ## 4 2013 1 1 725 N804JB -18 -1 ## 5 2013 1 1 461 N668DN -25 -6 ## 6 2013 1 1 1696 N39463 12 -4 ## 7 2013 1 1 507 N516JB 19 -5 ## 8 2013 1 1 5708 N829AS -14 -3 ## 9 2013 1 1 79 N593JB -8 -3 ## 10 2013 1 1 301 N3ALAA 8 -2 ## # ... with 336,766 more rows Workaround for tidyr::spread with duplicate row identifiers on R-bloggers↩ "],
["section-10.html", "Chapter 10 參考資料", " Chapter 10 參考資料 特別感謝國立臺北大學經濟系林茂廷教授對編寫上的建議。 長庚大學資管系大數據分析方法課程教學用書 曾意儒老師 r4ds 內容難免疏漏，還請不吝指教。 其他推薦資源 R翻轉教室 推薦社群：Taiwan R user group meetup 推薦文章：Tidyverse，學習R語言的新起點 "]
]
