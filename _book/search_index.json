[
["index.html", "R_Dplyr_minicourse Chapter 1 課程規劃 前言 課前要求 課程大綱", " R_Dplyr_minicourse 陳柏銘PoMingChen 2018-05-03 Chapter 1 課程規劃 前言 Dplyr是R語言當中相當重要的資料處理套件，同時也是跨出探索式資料分析的第一步。 探索式資料分析是透過視覺化或敘述統計的方式，去觀察資料本身的特性或者變數與變數之間的關聯，以求對資料有更多的認識，看看是否有意外有趣的發現或者不符合常理的地方。當然也包含資料清理與建立必要變數的部分，必要時需要透過爬蟲或者引入第三方資料，才算完整。 資料處理做得好，整體的分析方向和後面的統計建模才會有意義且往對的道路前進，以避免不必要的時間、資源浪費。 課前要求 安裝：R and R Studio Desktop: https://www.rstudio.com 下載dplyr cheatsheet 註冊hypothes.is，並點選以下連結加入討論群：https://hypothes.is/groups/YX79arq3/minicourse-dplyr 安裝Chrome瀏覽器 安裝hypothes.is extension for Chrome 註冊Github 安裝Github Desktop 課程大綱 本課程將逐步介紹Dplyr常用的分析資料函數，會搭配dplyr cheatsheet以及Help做講解，希望能夠在熟悉基本工具之後，未來甚至不需要這本電子書就能夠用效率的方式使用Dplyr。 以下為講解的資料整理函數(4 + 4）： 認識資料基本資訊 View、Str 計算敘述統計量 summarise 挑選適當的欄位 select 篩選適當觀察值 filter 從既有變數產生新變數 mutate 分群分析 group 排序觀察值 arrange 合併報表 join "],
["section-2.html", "Chapter 2 環境設定與基本觀察", " Chapter 2 環境設定與基本觀察 引入需要用到的套件 library(tidyverse) library(nycflights13) library(SportsAnalytics) fetch_NBAPlayerStatistics(&quot;17-18&quot;) -&gt; NBA1718 # 若無法成功，請先下載套件。 # 我們只要觀察2017-2018球季的資料。 引入資料 flights NBA1718 基本觀察函數 在「探索式資料分析」我們一定會需要去認識資料型態（Data type)，以及變數本身定義（涉及到Domain Knowledge）。 基本上四大資料型態有numeric(數值)，interger(整數)，character(字串)，logic(布林變數)。 這邊要介紹兩個常用的函數：head() str() ?flights head(flights) ## # A tibble: 6 x 19 ## year month day dep_time sched_dep_time dep_delay ## &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; ## 1 2013 1 1 517 515 2.00 ## 2 2013 1 1 533 529 4.00 ## 3 2013 1 1 542 540 2.00 ## 4 2013 1 1 544 545 -1.00 ## 5 2013 1 1 554 600 -6.00 ## 6 2013 1 1 554 558 -4.00 ## # ... with 13 more variables: arr_time &lt;int&gt;, ## # sched_arr_time &lt;int&gt;, arr_delay &lt;dbl&gt;, ## # carrier &lt;chr&gt;, flight &lt;int&gt;, tailnum &lt;chr&gt;, ## # origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, ## # distance &lt;dbl&gt;, hour &lt;dbl&gt;, minute &lt;dbl&gt;, ## # time_hour &lt;dttm&gt; str(flights) ## Classes &#39;tbl_df&#39;, &#39;tbl&#39; and &#39;data.frame&#39;: 336776 obs. of 19 variables: ## $ year : int 2013 2013 2013 2013 2013 2013 2013 2013 2013 2013 ... ## $ month : int 1 1 1 1 1 1 1 1 1 1 ... ## $ day : int 1 1 1 1 1 1 1 1 1 1 ... ## $ dep_time : int 517 533 542 544 554 554 555 557 557 558 ... ## $ sched_dep_time: int 515 529 540 545 600 558 600 600 600 600 ... ## $ dep_delay : num 2 4 2 -1 -6 -4 -5 -3 -3 -2 ... ## $ arr_time : int 830 850 923 1004 812 740 913 709 838 753 ... ## $ sched_arr_time: int 819 830 850 1022 837 728 854 723 846 745 ... ## $ arr_delay : num 11 20 33 -18 -25 12 19 -14 -8 8 ... ## $ carrier : chr &quot;UA&quot; &quot;UA&quot; &quot;AA&quot; &quot;B6&quot; ... ## $ flight : int 1545 1714 1141 725 461 1696 507 5708 79 301 ... ## $ tailnum : chr &quot;N14228&quot; &quot;N24211&quot; &quot;N619AA&quot; &quot;N804JB&quot; ... ## $ origin : chr &quot;EWR&quot; &quot;LGA&quot; &quot;JFK&quot; &quot;JFK&quot; ... ## $ dest : chr &quot;IAH&quot; &quot;IAH&quot; &quot;MIA&quot; &quot;BQN&quot; ... ## $ air_time : num 227 227 160 183 116 150 158 53 140 138 ... ## $ distance : num 1400 1416 1089 1576 762 ... ## $ hour : num 5 5 5 5 6 5 6 6 6 6 ... ## $ minute : num 15 29 40 45 0 58 0 0 0 0 ... ## $ time_hour : POSIXct, format: &quot;2013-01-01 05:00:00&quot; ... 小練習 請問(NBA1718)這個資料集裡面哪一種Data Type最多？ Steve Adams本季出賽場次為幾場？ str(NBA1718) head(NBA1718) "],
["summarise.html", "Chapter 3 敘述統計量Summarise()", " Chapter 3 敘述統計量Summarise() Summary functions take vectors as input and return one value (the arguments (…) In Help) The name will be the name of the variable in the result. The value should be an expression that returns a single value like min(x), n(), or sum(is.na(y)). flights %&gt;% summarise(avg_dep_delay = mean(dep_delay), dep_delay_sd = sd(dep_delay)) ## # A tibble: 1 x 2 ## avg_dep_delay dep_delay_sd ## &lt;dbl&gt; &lt;dbl&gt; ## 1 NA NA #為什麼na.rm沒有加上會變成NA? flights %&gt;% summarise(avg_dep_delay = mean(dep_delay, na.rm = T), dep_delay_sd = sd(dep_delay, na.rm = T)) ## # A tibble: 1 x 2 ## avg_dep_delay dep_delay_sd ## &lt;dbl&gt; &lt;dbl&gt; ## 1 12.6 40.2 flights %&gt;% summarise(IQR_dep_delay = IQR(dep_delay, na.rm = T), max_dep_delay = max(dep_delay, na.rm = T)) ## # A tibble: 1 x 2 ## IQR_dep_delay max_dep_delay ## &lt;dbl&gt; &lt;dbl&gt; ## 1 16.0 1301 小練習 請問NBA 2017-2018球季，全體球員平均上場場次為幾場？標準差多少？ Hint:上場場次，變數為GamePlayed NBA1718 %&gt;% summarise(avg_GamePlayed = mean(GamesPlayed), sd_GamePlayed = sd(GamesPlayed)) "],
["select.html", "Chapter 4 挑選適當的欄位Select()", " Chapter 4 挑選適當的欄位Select() Select 是針對欄位(variables)做子集合 基本取法 flights %&gt;% select(year,month,day,carrier,flight,tailnum,origin,dest) ## # A tibble: 336,776 x 8 ## year month day carrier flight tailnum origin ## &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt; ## 1 2013 1 1 UA 1545 N14228 EWR ## 2 2013 1 1 UA 1714 N24211 LGA ## 3 2013 1 1 AA 1141 N619AA JFK ## 4 2013 1 1 B6 725 N804JB JFK ## 5 2013 1 1 DL 461 N668DN LGA ## 6 2013 1 1 UA 1696 N39463 EWR ## 7 2013 1 1 B6 507 N516JB EWR ## 8 2013 1 1 EV 5708 N829AS LGA ## 9 2013 1 1 B6 79 N593JB JFK ## 10 2013 1 1 AA 301 N3ALAA LGA ## # ... with 336,766 more rows, and 1 more variable: ## # dest &lt;chr&gt; 取連續某幾行的欄位 flights %&gt;% select(year:day,carrier:origin) ## # A tibble: 336,776 x 7 ## year month day carrier flight tailnum origin ## &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt; ## 1 2013 1 1 UA 1545 N14228 EWR ## 2 2013 1 1 UA 1714 N24211 LGA ## 3 2013 1 1 AA 1141 N619AA JFK ## 4 2013 1 1 B6 725 N804JB JFK ## 5 2013 1 1 DL 461 N668DN LGA ## 6 2013 1 1 UA 1696 N39463 EWR ## 7 2013 1 1 B6 507 N516JB EWR ## 8 2013 1 1 EV 5708 N829AS LGA ## 9 2013 1 1 B6 79 N593JB JFK ## 10 2013 1 1 AA 301 N3ALAA LGA ## # ... with 336,766 more rows 取特定類型（字首開頭）的欄位 #use the helper with select() in cheatsheet flights %&gt;% select(starts_with(&quot;dep&quot;), starts_with(&quot;arr&quot;)) ## # A tibble: 336,776 x 4 ## dep_time dep_delay arr_time arr_delay ## &lt;int&gt; &lt;dbl&gt; &lt;int&gt; &lt;dbl&gt; ## 1 517 2.00 830 11.0 ## 2 533 4.00 850 20.0 ## 3 542 2.00 923 33.0 ## 4 544 -1.00 1004 -18.0 ## 5 554 -6.00 812 -25.0 ## 6 554 -4.00 740 12.0 ## 7 555 -5.00 913 19.0 ## 8 557 -3.00 709 -14.0 ## 9 557 -3.00 838 - 8.00 ## 10 558 -2.00 753 8.00 ## # ... with 336,766 more rows 取x y z變數以外的欄位 flights %&gt;% select(-c(time_hour, carrier,tailnum)) ## # A tibble: 336,776 x 16 ## year month day dep_time sched_dep_time dep_delay ## &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; ## 1 2013 1 1 517 515 2.00 ## 2 2013 1 1 533 529 4.00 ## 3 2013 1 1 542 540 2.00 ## 4 2013 1 1 544 545 -1.00 ## 5 2013 1 1 554 600 -6.00 ## 6 2013 1 1 554 558 -4.00 ## 7 2013 1 1 555 600 -5.00 ## 8 2013 1 1 557 600 -3.00 ## 9 2013 1 1 557 600 -3.00 ## 10 2013 1 1 558 600 -2.00 ## # ... with 336,766 more rows, and 10 more variables: ## # arr_time &lt;int&gt;, sched_arr_time &lt;int&gt;, ## # arr_delay &lt;dbl&gt;, flight &lt;int&gt;, origin &lt;chr&gt;, ## # dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;, ## # hour &lt;dbl&gt;, minute &lt;dbl&gt; 小練習 我想要看每位球員的基本資訊(名字、所屬隊伍、守備位置)，以及他一共搶了多少個籃板球、幾次助攻、幾次抄截? Hint: 變數分別是 TotalRebounds, Assists, Steals NBA1718 %&gt;% select(League:Position, TotalRebounds:Steals) "],
["filter.html", "Chapter 5 篩選適當觀察值filter()", " Chapter 5 篩選適當觀察值filter() filter 是針對列(row)做子集合，或者說尋找滿足特定條件的資料點。 基本用法 #資料集中有336776筆資料 #UA 這家航空公司有58665筆資料 flights %&gt;% filter(carrier == c(&quot;UA&quot;)) ## # A tibble: 58,665 x 19 ## year month day dep_time sched_dep_time dep_delay ## &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; ## 1 2013 1 1 517 515 2.00 ## 2 2013 1 1 533 529 4.00 ## 3 2013 1 1 554 558 - 4.00 ## 4 2013 1 1 558 600 - 2.00 ## 5 2013 1 1 558 600 - 2.00 ## 6 2013 1 1 559 600 - 1.00 ## 7 2013 1 1 607 607 0 ## 8 2013 1 1 611 600 11.0 ## 9 2013 1 1 623 627 - 4.00 ## 10 2013 1 1 628 630 - 2.00 ## # ... with 58,655 more rows, and 13 more variables: ## # arr_time &lt;int&gt;, sched_arr_time &lt;int&gt;, ## # arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;, ## # tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, ## # air_time &lt;dbl&gt;, distance &lt;dbl&gt;, hour &lt;dbl&gt;, ## # minute &lt;dbl&gt;, time_hour &lt;dttm&gt; 加入logical and boolean operators flights %&gt;% filter(carrier == &quot;UA&quot;, dep_delay &lt;= 20 &amp; arr_delay &lt;= 20) ## # A tibble: 44,426 x 19 ## year month day dep_time sched_dep_time dep_delay ## &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; ## 1 2013 1 1 517 515 2.00 ## 2 2013 1 1 533 529 4.00 ## 3 2013 1 1 554 558 - 4.00 ## 4 2013 1 1 558 600 - 2.00 ## 5 2013 1 1 558 600 - 2.00 ## 6 2013 1 1 559 600 - 1.00 ## 7 2013 1 1 607 607 0 ## 8 2013 1 1 611 600 11.0 ## 9 2013 1 1 623 627 - 4.00 ## 10 2013 1 1 643 646 - 3.00 ## # ... with 44,416 more rows, and 13 more variables: ## # arr_time &lt;int&gt;, sched_arr_time &lt;int&gt;, ## # arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;, ## # tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, ## # air_time &lt;dbl&gt;, distance &lt;dbl&gt;, hour &lt;dbl&gt;, ## # minute &lt;dbl&gt;, time_hour &lt;dttm&gt; 做變數計算並作為篩選條件 flights %&gt;% filter(carrier == &quot;UA&quot;, dep_delay + arr_delay &lt;= 30) ## # A tibble: 45,965 x 19 ## year month day dep_time sched_dep_time dep_delay ## &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; ## 1 2013 1 1 517 515 2.00 ## 2 2013 1 1 533 529 4.00 ## 3 2013 1 1 554 558 - 4.00 ## 4 2013 1 1 558 600 - 2.00 ## 5 2013 1 1 558 600 - 2.00 ## 6 2013 1 1 559 600 - 1.00 ## 7 2013 1 1 607 607 0 ## 8 2013 1 1 611 600 11.0 ## 9 2013 1 1 623 627 - 4.00 ## 10 2013 1 1 628 630 - 2.00 ## # ... with 45,955 more rows, and 13 more variables: ## # arr_time &lt;int&gt;, sched_arr_time &lt;int&gt;, ## # arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;, ## # tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, ## # air_time &lt;dbl&gt;, distance &lt;dbl&gt;, hour &lt;dbl&gt;, ## # minute &lt;dbl&gt;, time_hour &lt;dttm&gt; 小練習 1.誰是本季聯盟高耐戰力群？ （標準：出賽場次超過2800分鐘，想法是其全勤也要2800/82 = 34分鐘以上） NBA1718 NBA1718 %&gt;% filter(TotalMinutesPlayed &gt; 2800) 休士頓火箭隊本季一共登錄幾名球員？誰應該是該隊的固定先發五人？ Hint: HOU, Houston Rockets Hint: GamesStarted/GamesPlayed &gt; 0.75 NBA1718 %&gt;% filter(Team == &quot;HOU&quot;) %&gt;% filter(GamesStarted/GamesPlayed &gt; 0.75) "],
["mutate.html", "Chapter 6 從既有變數產生新變數mutate()", " Chapter 6 從既有變數產生新變數mutate() 和summary functions不同的是 : vectorized function，得到的還是一個vector(column vector) mutate從既有變數中新增變數，有保留原始data.frame。 flights %&gt;% mutate(total_delay = dep_delay + arr_delay) ## # A tibble: 336,776 x 20 ## year month day dep_time sched_dep_time dep_delay ## &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; ## 1 2013 1 1 517 515 2.00 ## 2 2013 1 1 533 529 4.00 ## 3 2013 1 1 542 540 2.00 ## 4 2013 1 1 544 545 -1.00 ## 5 2013 1 1 554 600 -6.00 ## 6 2013 1 1 554 558 -4.00 ## 7 2013 1 1 555 600 -5.00 ## 8 2013 1 1 557 600 -3.00 ## 9 2013 1 1 557 600 -3.00 ## 10 2013 1 1 558 600 -2.00 ## # ... with 336,766 more rows, and 14 more variables: ## # arr_time &lt;int&gt;, sched_arr_time &lt;int&gt;, ## # arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;, ## # tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, ## # air_time &lt;dbl&gt;, distance &lt;dbl&gt;, hour &lt;dbl&gt;, ## # minute &lt;dbl&gt;, time_hour &lt;dttm&gt;, total_delay &lt;dbl&gt; transmute從既有變數中新增變數，無保留原始data.frame。 flights %&gt;% transmute(total_delay = dep_delay + arr_delay) ## # A tibble: 336,776 x 1 ## total_delay ## &lt;dbl&gt; ## 1 13.0 ## 2 24.0 ## 3 35.0 ## 4 -19.0 ## 5 -31.0 ## 6 8.00 ## 7 14.0 ## 8 -17.0 ## 9 -11.0 ## 10 6.00 ## # ... with 336,766 more rows 小練習 休士頓火箭隊，隊伍中本季得分王是誰？ Hint: 每場平均得分＝本季總得分(TotalPoints)/本季出賽場次(GamesPlayed)。 NBA1718 %&gt;% filter(Team == &quot;HOU&quot;) %&gt;% mutate(avg_pt = TotalPoints/GamesPlayed) %&gt;% select(League:Position, avg_pt) 在聯盟中，要判斷一位球員是否是頂尖射手，會有三個指標，分別是 罰球命中率(FreeThrows) &gt; 90% 三分球(Threes)命中率 &gt; 40% 一般投籃(FieldGoals)命中率 &gt; 50% 總共是(90+40+50 &gt;= 180)，又稱為180Club。請找出本季滿足180俱樂部的球員有誰？ Hint: 若，這邊最一開始額外新增兩個標準，出賽場次&gt;50場，每場三分球至少出手一次。 Hint: 需要模仿上面練習一的方式，創造命中率的新變數，再把三個新變數相加(若沒有轉成百分比，最後是&gt;=1.8)做比較。 Hint: 善用Tab鍵補齊（這樣變數不用自己完整打完）。 NBA1718 %&gt;% filter(GamesPlayed &gt;= 50, ThreesAttempted/GamesPlayed &gt; 1) %&gt;% mutate(Free_percent = FreeThrowsMade/FreeThrowsAttempted, FieldGoal_percent = FieldGoalsMade/FieldGoalsAttempted, Three_percent = ThreesMade/ThreesAttempted) %&gt;% mutate(shootingstar = Free_percent + FieldGoal_percent + Three_percent) %&gt;% filter(shootingstar &gt;= 1.8) "],
["arrange.html", "Chapter 7 排序觀察值arrange()", " Chapter 7 排序觀察值arrange() 預設是由低到高 flights %&gt;% arrange(distance) ## # A tibble: 336,776 x 19 ## year month day dep_time sched_dep_time dep_delay ## &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; ## 1 2013 7 27 NA 106 NA ## 2 2013 1 3 2127 2129 - 2.00 ## 3 2013 1 4 1240 1200 40.0 ## 4 2013 1 4 1829 1615 134 ## 5 2013 1 4 2128 2129 - 1.00 ## 6 2013 1 5 1155 1200 - 5.00 ## 7 2013 1 6 2125 2129 - 4.00 ## 8 2013 1 7 2124 2129 - 5.00 ## 9 2013 1 8 2127 2130 - 3.00 ## 10 2013 1 9 2126 2129 - 3.00 ## # ... with 336,766 more rows, and 13 more variables: ## # arr_time &lt;int&gt;, sched_arr_time &lt;int&gt;, ## # arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;, ## # tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, ## # air_time &lt;dbl&gt;, distance &lt;dbl&gt;, hour &lt;dbl&gt;, ## # minute &lt;dbl&gt;, time_hour &lt;dttm&gt; 加入desc(), descending order是由高到低 flights %&gt;% arrange(desc(distance)) ## # A tibble: 336,776 x 19 ## year month day dep_time sched_dep_time dep_delay ## &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; ## 1 2013 1 1 857 900 - 3.00 ## 2 2013 1 2 909 900 9.00 ## 3 2013 1 3 914 900 14.0 ## 4 2013 1 4 900 900 0 ## 5 2013 1 5 858 900 - 2.00 ## 6 2013 1 6 1019 900 79.0 ## 7 2013 1 7 1042 900 102 ## 8 2013 1 8 901 900 1.00 ## 9 2013 1 9 641 900 1301 ## 10 2013 1 10 859 900 - 1.00 ## # ... with 336,766 more rows, and 13 more variables: ## # arr_time &lt;int&gt;, sched_arr_time &lt;int&gt;, ## # arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;, ## # tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, ## # air_time &lt;dbl&gt;, distance &lt;dbl&gt;, hour &lt;dbl&gt;, ## # minute &lt;dbl&gt;, time_hour &lt;dttm&gt; 小練習 (延續上一題）休士頓火箭隊，隊伍中前三大得分點是誰？ Hint: 搭配arrange NBA1718 %&gt;% filter(Team == &quot;HOU&quot;) %&gt;% mutate(avg_points = TotalPoints/GamesPlayed) %&gt;% select(League:GamesPlayed, avg_points) %&gt;% arrange(desc(avg_points)) "],
["group-by.html", "Chapter 8 分群分析group_by()", " Chapter 8 分群分析group_by() (In cheatsheet) group_by returns copy of table grouped by…so the original table will not disappear. You may assign the group_by table to a new R objecct. 用group_by函數看看哪一家航空公司的平均起飛（和抵達）延遲最嚴重？ flights %&gt;% group_by(carrier) %&gt;% summarise(avg_dep_delay=mean(dep_delay, na.rm = T), avg_arr_delay=mean(arr_delay, na.rm = T)) ## # A tibble: 16 x 3 ## carrier avg_dep_delay avg_arr_delay ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 9E 16.7 7.38 ## 2 AA 8.59 0.364 ## 3 AS 5.80 - 9.93 ## 4 B6 13.0 9.46 ## 5 DL 9.26 1.64 ## 6 EV 20.0 15.8 ## 7 F9 20.2 21.9 ## 8 FL 18.7 20.1 ## 9 HA 4.90 - 6.92 ## 10 MQ 10.6 10.8 ## 11 OO 12.6 11.9 ## 12 UA 12.1 3.56 ## 13 US 3.78 2.13 ## 14 VX 12.9 1.76 ## 15 WN 17.7 9.65 ## 16 YV 19.0 15.6 可以設定多個分組依據，好比說我想要知道航空公司哪些航班路線(Flight number)通常比較容易遇到延遲？ flights %&gt;% group_by(carrier, flight) %&gt;% summarise(avg_dep_delay=mean(dep_delay, na.rm = T), avg_arr_delay=mean(arr_delay, na.rm = T)) ## # A tibble: 5,725 x 4 ## # Groups: carrier [?] ## carrier flight avg_dep_delay avg_arr_delay ## &lt;chr&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 9E 2900 11.9 0.983 ## 2 9E 2901 15.5 15.8 ## 3 9E 2902 7.77 1.87 ## 4 9E 2903 22.6 7.34 ## 5 9E 2904 20.5 12.2 ## 6 9E 2905 7.00 - 8.38 ## 7 9E 2906 22.3 14.5 ## 8 9E 2907 13.2 5.30 ## 9 9E 2908 25.7 17.7 ## 10 9E 2909 12.0 - 1.00 ## # ... with 5,715 more rows 小練習 (延續上一題）休士頓火箭隊，各個守備位置各有多少人？ Hint: 隊、守備位置是兩個分組條件 Hint: 計算row（或者說樣本個數），可以用n(), number of values/rows，請參考summary function on dplyr cheatsheet NBA1718 %&gt;% group_by(Team, Position) %&gt;% summarise(nPlayer = n()) %&gt;% filter(Team == &quot;HOU&quot;) "],
["join.html", "Chapter 9 合併報表join()", " Chapter 9 合併報表join() 合併data.frame主要可以以column（欄位，變數）角度進行合併，也可以用row（列，觀察值）的角度進行合併。 在兩個資料表以上，或像是爬蟲完畢的資料，彙整進來有時候需要合併報表，才算是完整清理完畢，並進入下一階段。這邊只簡單示範幾個常用的函數與參數。 (by argument In Help) a character vector of variables to join by. If NULL, the default, *_join() will do a natural join, using all variables with common names (共同的變數名) across the two tables. (米字符號＊是left/right/inner的意思) left_join(): 以第一個參數x為基準(x資料表裡面的觀測值會全部保留)，將y合併進入x。 right_join(): 以第二個參數y為基準，將x合併進入y (y資料表裡面的觀測值會全部保留)。 inner_join(): 如果沒有設定by，函數會比較x,y資料表共同有的變數，然後取兩者相符的列。 full-join(): 會保留所有的觀測值。 row的合併在cheatsheet上比較直觀且清楚，不進行示範。 band_members band_instruments band_members %&gt;% left_join(band_instruments) ## # A tibble: 3 x 3 ## name band plays ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 Mick Stones &lt;NA&gt; ## 2 John Beatles guitar ## 3 Paul Beatles bass #兩個資料集皆有name，就算by沒有設定，參數會自動比較有無common names(common variables)，這兩個資料表也只有name一個共同變數。當然有時候共同的變數不只一個。 band_members %&gt;% left_join(band_instruments, by=&quot;name&quot;) ## # A tibble: 3 x 3 ## name band plays ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 Mick Stones &lt;NA&gt; ## 2 John Beatles guitar ## 3 Paul Beatles bass #會成功嗎？（band_instruments (右邊)資料表沒有band這個變數，無法作為共同的參照基礎，兩者無從比較，是不能的。） band_members %&gt;% left_join(band_instruments, by=&quot;band&quot;) #會成功嗎？(band_members資料表沒有plays這個變數，起初就設定錯誤) band_members %&gt;% left_join(band_instruments, by=&quot;plays&quot;) "],
["section-10.html", "Chapter 10 參考資料", " Chapter 10 參考資料 林茂廷老師dplyr用書 r4ds 長庚大學資管系大數據分析方法課程教學用書 推薦活動：Taiwan R user group meetup 推薦文章：Tidyverse，學習R語言的新起點 "]
]
